name: Build and deploy Docker image to ECR

on:
  # push:
  #   branches:
  #     - staging
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run workflow on'
        required: true
        default: 'main'
        type: choice
        options:
        - staging
        - uat
        - production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch }}
        
    - name: Check out my other private repo
      uses: actions/checkout@master
      with:
        repository: CloudNutVN/app-config
        token: ${{ secrets.PAT }}
        path: app-config
        
    - name: Copy config
      run: |
        pwd
        ls ..
        ls -lrt
        cp -r app-config/config/vil-paymentgw/${{ github.event.inputs.branch }}/application.properties ./src/main/resources/application.properties
        rm -rf app-config
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build with Maven
      run: | 
        mvn clean install &&
        mvn clean package
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     push: false
    #     tags: ${{ steps.login-ecr.outputs.registry }}/cloudnut_vil_auth:${{ github.event.inputs.branch }}-${{ github.run_number }}
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
        IMAGE_TAG: ${{ github.event.inputs.branch }}-${{ github.run_number }}
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 315671439998.dkr.ecr.us-east-1.amazonaws.com
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
